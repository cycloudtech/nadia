<?xml version="1.0" encoding="UTF-8"?>
<n:dialog xmlns:n="http://mmberg.net/nadia" name="dummy2">
   <global_formality>4</global_formality>
   <global_language>en</global_language>
   <global_politeness>4</global_politeness>
   <start_task_name>start</start_task_name>
   <strategy>mixed</strategy>
   <tasks>
      <task name="start">
         <bagOfWordsTaskSelector>
            <word>hello</word>
         </bagOfWordsTaskSelector>
         <itos>
            <ito name="welcome">
               <AQD>
                  <type>
                     <answerType>open_ended</answerType>
                  </type>
               </AQD>
               <fallback_question>Hello! How may I help you?</fallback_question>
               <group>0</group>
               <index>0</index>
               <required>false</required>
               <useLG>false</useLG>
            </ito>
         </itos>
      </task>
      <task name="getTripInformation">
         <bagOfWordsTaskSelector>
            <word>travel</word>
            <word>book</word>
            <word>journey</word>
            <word>trip</word>
         </bagOfWordsTaskSelector>
         <itos>
            <ito name="getDepartureCity">
               <AQD>
                  <type>
                     <answerType>fact.named_entity.non_animated.location.city</answerType>
                  </type>
               </AQD>
               <fallback_question>Where do you want to start?</fallback_question>
               <group>0</group>
               <index>0</index>
               <required>false</required>
               <useLG>false</useLG>
            </ito>
            <ito name="getDestinationCity">
               <AQD>
                  <type>
                     <answerType>fact.named_entity.non_animated.location.city</answerType>
                  </type>
               </AQD>
               <fallback_question>Where do you want to go?</fallback_question>
               <group>0</group>
               <index>0</index>
               <required>false</required>
               <useLG>false</useLG>
            </ito>
            <ito name="getNumberOfPersons">
               <AQD>
                  <type>
                     <answerType>fact.quantity</answerType>
                  </type>
               </AQD>
               <fallback_question>For how many persons?</fallback_question>
               <group>0</group>
               <index>0</index>
               <required>false</required>
               <useLG>false</useLG>
            </ito>
         </itos>
         <groovyAction>
            <returnAnswer>true</returnAnswer>
            <utteranceTemplate>This trip from %getDepartureCity to %getDestinationCity costs #price Euros.</utteranceTemplate>
            <code><![CDATA[executionResults.put("price","257")]]></code>
         </groovyAction>
      </task>
      <task name="getWeatherInformation">
         <bagOfWordsTaskSelector>
            <word>weather</word>
            <word>forecast</word>
            <word>temperature</word>
            <word>trip</word>
         </bagOfWordsTaskSelector>
         <itos>
            <ito name="getWeatherCity">
               <AQD>
                  <type>
                     <answerType>fact.named_entity.non_animated.location.city</answerType>
                  </type>
               </AQD>
               <fallback_question>For which city do you want to know the weather?</fallback_question>
               <group>0</group>
               <index>0</index>
               <required>false</required>
               <useLG>false</useLG>
            </ito>
         </itos>
         <groovyAction>
            <returnAnswer>true</returnAnswer>
            <utteranceTemplate>The temperature in %getWeatherCity is #temperature degrees.</utteranceTemplate>
            <code><![CDATA[import groovyx.net.http.*
import javax.xml.xpath.*
def http = new HTTPBuilder('http://weather.yahooapis.com')
http.get( path: '/forecastrss', query:[w:'2502265',u:'c'],  contentType: ContentType.XML) { resp, xml -> 
   def temp = xml.channel.item.condition[0].@temp
	executionResults.put("temperature",temp.toString())
}]]></code>
         </groovyAction>
      </task>
   </tasks>
</n:dialog>
